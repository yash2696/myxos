alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias sysCallNo S1;
sysCallNo = [physicalSP - 1];

alias fileName S2;
fileName = [physicalSP - 3];

alias i S3
if(sysCallNo == 1) then
    i = FAT;   // S3 = 2560

    // checking if file already exists in the disk
    while(i < FAT + 512) do
        if(fileName == [i + 0]) then
            [physicalSP - 2] = 0;       // putting 0(success) in return value
            ireturn;
        endif;
        i = i + 8;    // a fat entry is of 8 words
    endwhile;

    i = DISK_LIST + 24;    //DISK_LIST = 3072

    // FIRST 24 blocks for system and init

    //checking for a free entry(indicated by 0) in the disk
    while([i] != 0 && i < DISK_LIST + 448) do
        i = i + 1;
    endwhile;

    // if disk is not empty return -1 to user program
    if([i] != 0) then
        [physicalSP - 2] = -1;
        ireturn;
    endif;

    j = FAT;
    while(j < 3072) do
        if([j + 2] != -1 ) then
            j = j + 8;
        else
            break;
        endif;
    endwhile;

    if([j + 2] != -1) then
        [physicalSP - 2] = -1;
        ireturn;
    endif;

    alias basicBlock S3;
    basicBlock = basicBlock - 3072;
    [j] = fileName;
    [j + 1] = 0;
    [j + 2] = basicBlock;

    load(1, basicBlock);

    i = 0;
    while(i < 256) do
        [i + 512] = -1;
        i = i + 1;
    endwhile;

    store(1, basicBlock);

    //
    [basicBlock + 3072] = 1;

    store(5, 19);
    store(6, 20);
endif;
ireturn;
