alias physicalSP S0;
physicalSP = ([PTBR + 2 * (SP / 512)] * 512) + (SP % 512);

alias sysCallNo S1;
sysCallNo = [physicalSP - 1];

if(sysCallNo == 1) then
    alias fileName S2;
    fileName = [physicalSP - 3];

    S3 = FAT;   // S3 = 2560

    // checking if file already exists in the disk
    while(S3 < 3072) do
        if(fileName == [S3]) then
            [physicalSP - 2] = 0;       // putting 0(success) in top of stack
            ireturn;
        endif;
        S3 = S3 + 8;    // a fat entry is of 8 words
    endwhile;

    S3 = DISK_LIST + 24;    //DISK_LIST = 3072

    // FIRST 24 blocks for system and init

    //checking for a free entry(indicated by 0) in the disk
    while([S3] != 0 && S3 < DISK_LIST + 448) do
        S3 = S3 + 1;
    endwhile;

    // if disk is not empty return -1 to user program
    if([S3] != 0) then
        [physicalSP - 2] = -1;
        ireturn;
    endif;

    S4 = FAT;
    while(S4 < 3072) do
        if([S4 + 2] != -1 ) then
            S4 = S4 + 8;
        else
            break;
        endif;
    endwhile;

    if([S4 + 2] != -1) then
        [physicalSP - 2] = -1;
        ireturn;
    endif;

    alias basicBlock S3;
    basicBlock = basicBlock - 3072;
    [S4] = fileName;
    [S4 + 1] = 0;
    [S4 + 2] = basicBlock;

    load(1, basicBlock);

    alias i S5;
    i = 0;
    while(i < 256) do
        [i + 512] = -1;
        i = i + 1;
    endwhile;

    store(1, basicBlock);

    [basicBlock + 3072] = 1;

    store(5, 19);
    store(6, 20);
    [physicalSP - 2] = 0;
    ireturn;
endif;

if(sysCallNo == 4) then
    alias fileName S2;
    fileName = [physicalSP - 3];

    S3 = 0;

    while([FAT + S3 * 8] != fileName && S3 < 64) do
        S3 = S3 + 1;
    endwhile;

    if(S3 >= 64) then
        print "here1";
        [physicalSP - 2] = -1;
        ireturn;
    endif;

    S4 = 0;
    while(S4 < 128) do
        if([FILE_TABLE + S4] == S3) then
            print "S3";
            print S3;
            print "open no";
            print [FILE_TABLE + S4 + 1];
            print "here2";
            [physicalSP - 2] = -1;
            ireturn;
        endif;
        S4 = S4 + 2;
    endwhile;

    alias basicBlock S5;
    basicBlock = [FAT + S3 * 8 + 2];

    load(1, basicBlock);

    alias i S6;
    i = 0;
    while(i < 256) do
        if([512 + i] != -1) then
            load(1, [i + 512]);

            alias j S7;
            j = 0;
            while(j < 512) do
                [j + 512] = "";
                j = j + 1;
            endwhile;
            store(1, [i + 512]);

            [DISK_LIST + [i + 512]] = 0;
        endif;
        load(1, basicBlock);
        [512 + i] = "";
        i = i + 1;
    endwhile;

    [3072 + basicBlock] = 0;
    store(1, basicBlock);

    [FAT + S3 * 8 + 0] = -1;
    [FAT + S3 * 8 + 2] = -1;

    store(5, 19);
    store(6, 20);

    [physicalSP - 2] = 0;
    ireturn;
endif;
